<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd 
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    
    <!-- 自动扫描该包-->  
    <context:component-scan base-package="com.text"/>
    
    <!-- 国际信息配置文件 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" p:basename="i18n/messages"/>
    
    
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
       class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
       <property name="supportedMediaTypes">  
           <list>  
               <value>text/html;charset=UTF-8</value>
               <value>application/json;charset=UTF-8</value>
           </list>  
       </property>  
    </bean>
    
    <!-- 注解的处理映射器 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
    
    <!-- 注解的处理适配器 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    	<property name="messageConverters">
    		<list>
    			<ref bean="mappingJacksonHttpMessageConverter"/>
    		</list>
    	</property>
    </bean>
    
    <!-- 使用mvc:annotation-driven可以代替处理映射器和处理适配器的配置
    	 mvc:annotation-driven默认加载许多的参数绑定方法；
    	 比如json转化器默认加载了；
    	 实际开发中使用mvc:annotation-driven
    	 
    	<mvc:annotation-driven></mvc:annotation-driven>
   -->
   	
   	<!-- 自定义参数绑定
    <mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>
    
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    		//转化器
    	<property name="converters">
    			//日期转化类
    		<bean class="com.text.util.UserDateConverter"/>
    	</property>
    </bean>
     -->
    
    <!-- 注解的视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
    	<property name="prefix" value="/"/>
    	<property name="suffix" value=".html"/>
    </bean>
    
     <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
     	<property name="defaultEncoding" value="utf-8"/>    
        <property name="maxUploadSize" value="10485760000"/>    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960"/>  
     </bean>
</beans>